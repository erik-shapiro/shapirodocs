{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Shapiro MIS Documentation Ocean Insights Shapiro Subscription Program: imp/callOceanInsightsTracking.p Check OI data OI API Data Carrier List Ports America Shapiro Subscription URL Shapiro Response URL Hub 360 Regen The WSDL How to regen the WSDL Database Changes Reset The Demons cd to /usr/bin run stopdemons cd to /data3/demon1 remove STOPDEMON1 run new.start.demon as su","title":"Shapiro MIS Documentation"},{"location":"#shapiro-mis-documentation","text":"","title":"Shapiro MIS Documentation"},{"location":"#ocean-insights","text":"Shapiro Subscription Program: imp/callOceanInsightsTracking.p Check OI data OI API Data Carrier List","title":"Ocean Insights"},{"location":"#ports-america","text":"Shapiro Subscription URL Shapiro Response URL","title":"Ports America"},{"location":"#hub-360","text":"","title":"Hub 360"},{"location":"#regen-the-wsdl","text":"How to regen the WSDL","title":"Regen The WSDL"},{"location":"#database-changes","text":"","title":"Database Changes"},{"location":"#reset-the-demons","text":"cd to /usr/bin run stopdemons cd to /data3/demon1 remove STOPDEMON1 run new.start.demon as su","title":"Reset The Demons"},{"location":"regenwsdl/","text":"Regen WSDL Make sure that you compile any programs that you want added to the WSDL Login to Shap-exp-360pro for Production or Shap-exp-360dev for Development. Launch WinSCP Move over the .r files, of the programs you complied in Step 1 (See below for the directory names) Launch the proxy generator Hit the folder icon and navigate to C:\\shapiro360 and chose ShapiroProd or ShapiroDev The hit Procedure->Add->Non-Persistent Hit save and then hit to generate the WSDL Next go back to WinSCP and navigate to the below folders Drag ShapiroProd.xpxg from the left panel to the right panel. If you get and error the delete the file on the right side and then drag over the file. Open up a rashi6 session and cd to /home/allegro/bin and run either xpxgdev-build.sh or xpxgprod-build.sh You should receive a message that this run was successful. Next go to http://192.168.66.102:9090 Go to the Web Services Adapter section and select either shap-exp-rashi6.wsadevShapiro360 or shap-exp-rashi6.wsaprodShapiro360 Got t Status Enablement and disable the Web Service Adaptor. Then go back to the previous screen and hit Update. Type /progs/mxp/shap102/objects/ShapiroProd.wsm or /progs/mxp/shap102test/objects/ShapiroDev.wsm and hit submit. Click through the next page and you should receive a message that it was updated. Lastly right click and open Configure Tomcat as administrator Click stop, wait about 10 seconds and then start tomcat.","title":"Regen WSDL"},{"location":"regenwsdl/#regen-wsdl","text":"Make sure that you compile any programs that you want added to the WSDL Login to Shap-exp-360pro for Production or Shap-exp-360dev for Development. Launch WinSCP Move over the .r files, of the programs you complied in Step 1 (See below for the directory names) Launch the proxy generator Hit the folder icon and navigate to C:\\shapiro360 and chose ShapiroProd or ShapiroDev The hit Procedure->Add->Non-Persistent Hit save and then hit to generate the WSDL Next go back to WinSCP and navigate to the below folders Drag ShapiroProd.xpxg from the left panel to the right panel. If you get and error the delete the file on the right side and then drag over the file. Open up a rashi6 session and cd to /home/allegro/bin and run either xpxgdev-build.sh or xpxgprod-build.sh You should receive a message that this run was successful. Next go to http://192.168.66.102:9090 Go to the Web Services Adapter section and select either shap-exp-rashi6.wsadevShapiro360 or shap-exp-rashi6.wsaprodShapiro360 Got t Status Enablement and disable the Web Service Adaptor. Then go back to the previous screen and hit Update. Type /progs/mxp/shap102/objects/ShapiroProd.wsm or /progs/mxp/shap102test/objects/ShapiroDev.wsm and hit submit. Click through the next page and you should receive a message that it was updated. Lastly right click and open Configure Tomcat as administrator Click stop, wait about 10 seconds and then start tomcat.","title":"Regen WSDL"},{"location":"setup/","text":"Local Setup Download Git . Install Python (be sure to \"Add Python 3.7 to PATH\"). It should include pip by default. Go into your favorite directory. Right-click in whitespace and click \"Git Bash Here\". A command prompt will come up. Run the following: python install mkdocs (this will install mkdocs, which you need to compile the documentation into HTML pages) git clone //shap-exp-360pro/c$/inetpub/wwwroot/shapiro-cms/templates/rt_metamorph/shapirodocumentaion cd shapirodocumentaion git checkout master Now make your changes. Once you are done, commit your raw changes to the master branch: git pull (make sure you have the latest version of the repository) git status (make sure your files show up as edited) git add {filename} (stage your files for a commit) git commit (be sure to add a commit message on the next screen, or else your commit will not take) git push (this pushes your raw changes to the master branch) mkdocs gh-deploy (this compiles the documentation site and syncs it to 360) Please remember to do both: push to the master branch and deploy the new site. These are two distinct branches, and updating one will not update the other.","title":"Local Setup"},{"location":"setup/#local-setup","text":"Download Git . Install Python (be sure to \"Add Python 3.7 to PATH\"). It should include pip by default. Go into your favorite directory. Right-click in whitespace and click \"Git Bash Here\". A command prompt will come up. Run the following: python install mkdocs (this will install mkdocs, which you need to compile the documentation into HTML pages) git clone //shap-exp-360pro/c$/inetpub/wwwroot/shapiro-cms/templates/rt_metamorph/shapirodocumentaion cd shapirodocumentaion git checkout master Now make your changes. Once you are done, commit your raw changes to the master branch: git pull (make sure you have the latest version of the repository) git status (make sure your files show up as edited) git add {filename} (stage your files for a commit) git commit (be sure to add a commit message on the next screen, or else your commit will not take) git push (this pushes your raw changes to the master branch) mkdocs gh-deploy (this compiles the documentation site and syncs it to 360) Please remember to do both: push to the master branch and deploy the new site. These are two distinct branches, and updating one will not update the other.","title":"Local Setup"},{"location":"Ocean Insights/about/","text":"Ocean Insights Test","title":"About"}]}